{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zegey\\\\OneDrive\\\\Documents\\\\GitHub\\\\Airbnb-AI-Customer-Support\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [chatHistory, setChatHistory] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // Utility function to format bot messages\n  const formatBotMessage = message => {\n    message = message.replace(/\\n/g, '<br>'); // Replace newlines with <br> for line breaks\n\n    // Convert simple lists (e.g., \"1. Item\") into HTML lists\n    message = message.replace(/(\\d+)\\.\\s+/g, '<li><b>$1:</b> ');\n    message = message.replace(/<\\/li><br>/g, '</li>'); // Ensure list items are properly closed\n    message = '<ol>' + message + '</ol>'; // Wrap in ordered list tags\n\n    // Convert URLs to anchor tags\n    message = message.replace(/(https?:\\/\\/[^\\s]+)/g, '<a href=\"$1\" target=\"_blank\">$1</a>');\n    return message;\n  };\n  const sendMessage = async event => {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:5000/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userInput\n        })\n      });\n      const data = await response.json();\n\n      // Format the bot response before setting it to chat history\n      const formattedBotResponse = formatBotMessage(data.response);\n      setChatHistory([...chatHistory, {\n        type: 'user',\n        text: userInput\n      }, {\n        type: 'bot',\n        text: formattedBotResponse\n      }]);\n      setUserInput('');\n    } catch (error) {\n      console.error('Error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"AI Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat-history\",\n      children: chatHistory.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.type === 'user' ? 'user-message' : 'bot-message',\n        dangerouslySetInnerHTML: {\n          __html: msg.text\n        } // Use dangerouslySetInnerHTML to render formatted HTML\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value),\n        placeholder: \"Enter your message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"loader\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"loader.gif\",\n        alt: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"CM+lO/Ac8DrOMtl3sadv46kUdvQ=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chat","_s","chatHistory","setChatHistory","userInput","setUserInput","loading","setLoading","formatBotMessage","message","replace","sendMessage","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","formattedBotResponse","type","text","error","console","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","className","dangerouslySetInnerHTML","__html","onSubmit","value","onChange","e","target","placeholder","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/zegey/OneDrive/Documents/GitHub/Airbnb-AI-Customer-Support/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css'; \r\n\r\nfunction Chat() {\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Utility function to format bot messages\r\n  const formatBotMessage = (message) => {\r\n    message = message.replace(/\\n/g, '<br>'); // Replace newlines with <br> for line breaks\r\n\r\n    // Convert simple lists (e.g., \"1. Item\") into HTML lists\r\n    message = message.replace(/(\\d+)\\.\\s+/g, '<li><b>$1:</b> ');\r\n    message = message.replace(/<\\/li><br>/g, '</li>');  // Ensure list items are properly closed\r\n    message = '<ol>' + message + '</ol>'; // Wrap in ordered list tags\r\n\r\n    // Convert URLs to anchor tags\r\n    message = message.replace(/(https?:\\/\\/[^\\s]+)/g, '<a href=\"$1\" target=\"_blank\">$1</a>');\r\n\r\n    return message;\r\n  };\r\n\r\n  const sendMessage = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/chat', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ userInput }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      // Format the bot response before setting it to chat history\r\n      const formattedBotResponse = formatBotMessage(data.response);\r\n\r\n      setChatHistory([...chatHistory, { type: 'user', text: userInput }, { type: 'bot', text: formattedBotResponse }]);\r\n      setUserInput('');\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"chat-container\">\r\n      <h4>AI Assistant</h4>\r\n      <div id=\"chat-history\">\r\n        {chatHistory.map((msg, index) => (\r\n          <div \r\n            key={index} \r\n            className={msg.type === 'user' ? 'user-message' : 'bot-message'} \r\n            dangerouslySetInnerHTML={{ __html: msg.text }} // Use dangerouslySetInnerHTML to render formatted HTML\r\n          />\r\n        ))}\r\n      </div>\r\n      <form onSubmit={sendMessage}>\r\n        <input\r\n          type=\"text\"\r\n          value={userInput}\r\n          onChange={(e) => setUserInput(e.target.value)}\r\n          placeholder=\"Enter your message\"\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n      {loading && <div id=\"loader\"><img src=\"loader.gif\" alt=\"Loading...\" /></div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}