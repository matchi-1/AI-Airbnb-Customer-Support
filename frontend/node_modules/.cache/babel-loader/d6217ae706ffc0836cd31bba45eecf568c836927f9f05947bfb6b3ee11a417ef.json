{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Websites\\\\Airbnb-chatbot\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [chatHistory, setChatHistory] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const sendMessage = async event => {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:5000/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userInput\n        })\n      });\n      const data = await response.json();\n      setChatHistory([...chatHistory, {\n        type: 'user',\n        text: userInput\n      }, {\n        type: 'bot',\n        text: data.response\n      }]);\n      setUserInput('');\n    } catch (error) {\n      console.error('Error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"AI Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat-history\",\n      children: chatHistory.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.type === 'user' ? 'user-message' : 'bot-message',\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value),\n        placeholder: \"Enter your message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"loader\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"loader.gif\",\n        alt: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"CM+lO/Ac8DrOMtl3sadv46kUdvQ=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chat","_s","chatHistory","setChatHistory","userInput","setUserInput","loading","setLoading","sendMessage","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","type","text","error","console","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","className","onSubmit","value","onChange","e","target","placeholder","src","alt","_c","$RefreshReg$"],"sources":["D:/Projects/Websites/Airbnb-chatbot/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css'; \r\n\r\nfunction Chat() {\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const sendMessage = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/chat', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ userInput }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      setChatHistory([...chatHistory, { type: 'user', text: userInput }, { type: 'bot', text: data.response }]);\r\n      setUserInput('');\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"chat-container\">\r\n      <h4>AI Assistant</h4>\r\n      <div id=\"chat-history\">\r\n        {chatHistory.map((msg, index) => (\r\n          <div key={index} className={msg.type === 'user' ? 'user-message' : 'bot-message'}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={sendMessage}>\r\n        <input\r\n          type=\"text\"\r\n          value={userInput}\r\n          onChange={(e) => setUserInput(e.target.value)}\r\n          placeholder=\"Enter your message\"\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n      {loading && <div id=\"loader\"><img src=\"loader.gif\" alt=\"Loading...\" /></div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}